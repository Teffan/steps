def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// https://flutter.dev/docs/deployment/android
def keystoreDebugProperties = new Properties()
def keystoreDebugPropertiesFile = rootProject.file('debug.key.properties')
if (keystoreDebugPropertiesFile.exists()) {
    keystoreDebugProperties.load(new FileInputStream(keystoreDebugPropertiesFile))
}

def keystoreReleaseProperties = new Properties()
def keystoreReleasePropertiesFile = rootProject.file('release.key.properties')
if (keystoreReleasePropertiesFile.exists()) {
    keystoreReleaseProperties.load(new FileInputStream(keystoreReleasePropertiesFile))
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.mediabeam.fitness"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        debug {
            keyAlias keystoreDebugProperties['keyAlias']
            keyPassword keystoreDebugProperties['keyPassword']
            storeFile keystoreDebugProperties['storeFile'] ? file(keystoreDebugProperties['storeFile']) : null
            storePassword keystoreDebugProperties['storePassword']
        }
        release {
            keyAlias keystoreReleaseProperties['keyAlias']
            keyPassword keystoreReleaseProperties['keyPassword']
            storeFile keystoreReleaseProperties['storeFile'] ? file(keystoreReleaseProperties['storeFile']) : null
            storePassword keystoreReleaseProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.android.gms:play-services-fitness:18.0.0'
    implementation 'com.google.android.gms:play-services-auth:18.1.0'
}
